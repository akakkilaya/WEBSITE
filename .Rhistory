#run to install hugo; wait until finished
blogdown::install_hugo()
#run to install the blogdown package; wait until finished
install.packages("blogdown")
#run to install hugo; wait until finished
blogdown::install_hugo()
blogdown::new_site(theme="nurlansu/hugo-sustain")
install.packages(c("ggplot2movies", "ggpubr", "ggthemes", "plotly"))
yes
YES
library(ggplot2)
library(knitr)
hook_output = knit_hooks$get('output')
knit_hooks$set(output = function(x, options) {
# this hook is used only when the linewidth option is not NULL
if (!is.null(n <- options$linewidth)) {
x = knitr:::split_lines(x)
# any lines wider than n should be wrapped
if (any(nchar(x) > n)) x = strwrap(x, width = n)
x = paste(x, collapse = '\n')
}
hook_output(x, options)
})
knitr::opts_chunk$set(echo = TRUE, eval = TRUE,fig.align="center",warning=FALSE,message=FALSE,fig.width=8, fig.height=5, linewidth=60)
options(tibble.width = 100,width = 100)
library(tidyverse)
library(mvnormtest)
library(knitr)
hook_output = knit_hooks$get('output')
knit_hooks$set(output = function(x, options) {
# this hook is used only when the linewidth option is not NULL
if (!is.null(n <- options$linewidth)) {
x = knitr:::split_lines(x)
# any lines wider than n should be wrapped
if (any(nchar(x) > n)) x = strwrap(x, width = n)
x = paste(x, collapse = '\n')
}
hook_output(x, options)
})
knitr::opts_chunk$set(echo = TRUE, eval = TRUE,fig.align="center",warning=FALSE,message=FALSE,fig.width=8, fig.height=5, linewidth=60)
options(tibble.width = 100,width = 100)
library(tidyverse)
MedGPA <- read_csv("MedGPA.csv", col_types = cols(X1 = col_skip()))
MedGPA$Accept <- NULL
MedGPA$Acceptance <- as.factor(MedGPA$Acceptance)
med<- MedGPA
man <- manova(cbind(BCPM,GPA,VR,PS,WS,BS,Apps)~Acceptance,data=med)
summary(man)
summary.aov(man)
med%>% group_by(Acceptance) %>% summarise(mean(BCPM), mean(GPA),mean(VR),mean(PS),mean(WS,na.rm=T),mean(BS),mean(Apps))
pairwise.t.test(med$BCPM, med$Acceptance,  p.adj="none")
pairwise.t.test(med$GPA,med$Acceptance,  p.adj="none")
pairwise.t.test(med$PS,med$Acceptance, p.adj="none" )
pairwise.t.test(med$BS,med$Acceptance, p.adj="none")
1-(.95)^12
.05/12
med <- med[c(1,2,3,4,5,6,7,8,10,9)]
covmat <- med%>% group_by(Acceptance) %>% do(covs=cov(.[3:9]))
for (i in 1:8) {print(as.character(covmat$Acceptance[i])); print(covmat$covs[i])
}
nrow(MedGPA) * ncol(MedGPA)
meda <- med %>% filter(Acceptance=="1")
Men<- meda %>% filter(Sex=="M") %>% select(BCPM)
Women<- meda %>% filter(Sex=="F") %>% select(BCPM)
M<- Men$BCPM
W<- Women$BCPM
comb<- data.frame(Sex=c(rep("M",12),rep("W",18)),BCPM=c(M,W))
rand_dist<-vector()
for (i in 1:5000) {
comb<- data.frame(Sex=sample(comb$Sex),BCPM=comb$BCPM)
rand_dist[i]<-mean(comb[comb$Sex=="M",]$BCPM)- mean(comb[comb$Sex=="W",]$BCPM)
}
comb%>% group_by(Sex) %>% summarise(means=mean(BCPM)) %>% summarise(mean_diff=diff(means))
{hist(rand_dist,main = "",ylab = "");abline(v= -0.07944444,col="red")}
mean(rand_dist> 0.07944444 | rand_dist< -0.07944444)
library(lmtest)
install.packages(c("backports", "boot", "broom", "callr", "class", "dbplyr", "dplyr", "fs", "ggplot2", "glue", "KernSmooth", "lattice", "lifecycle", "lubridate", "MASS", "modelr", "nlme", "nnet", "pillar", "purrr", "Rcpp", "reshape2", "rlang", "spatial", "survival", "tibble", "tinytex", "vctrs", "withr", "xfun", "xml2"))
install.packages(c("backports", "boot", "broom", "callr", "class", "dbplyr", "dplyr", "fs", "ggplot2", "glue", "KernSmooth", "lattice", "lifecycle", "lubridate", "MASS", "modelr", "nlme", "nnet", "pillar", "purrr", "Rcpp", "reshape2", "rlang", "spatial", "survival", "tibble", "tinytex", "vctrs", "withr", "xfun", "xml2"))
install.packages(c("backports", "boot", "broom", "callr", "class", "dbplyr", "dplyr", "fs", "ggplot2", "glue", "KernSmooth", "lattice", "lifecycle", "lubridate", "MASS", "modelr", "nlme", "nnet", "pillar", "purrr", "Rcpp", "reshape2", "rlang", "spatial", "survival", "tibble", "tinytex", "vctrs", "withr", "xfun", "xml2"))
install.packages(c("backports", "boot", "broom", "callr", "class", "dbplyr", "dplyr", "fs", "ggplot2", "glue", "KernSmooth", "lattice", "lifecycle", "lubridate", "MASS", "modelr", "nlme", "nnet", "pillar", "purrr", "Rcpp", "reshape2", "rlang", "spatial", "survival", "tibble", "tinytex", "vctrs", "withr", "xfun", "xml2"))
install.packages(c("backports", "boot", "broom", "callr", "class", "dbplyr", "dplyr", "fs", "ggplot2", "glue", "KernSmooth", "lattice", "lifecycle", "lubridate", "MASS", "modelr", "nlme", "nnet", "pillar", "purrr", "Rcpp", "reshape2", "rlang", "spatial", "survival", "tibble", "tinytex", "vctrs", "withr", "xfun", "xml2"))
install.packages(c("backports", "boot", "broom", "callr", "class", "dbplyr", "dplyr", "fs", "ggplot2", "glue", "KernSmooth", "lattice", "lifecycle", "lubridate", "MASS", "modelr", "nlme", "nnet", "pillar", "purrr", "Rcpp", "reshape2", "rlang", "spatial", "survival", "tibble", "tinytex", "vctrs", "withr", "xfun", "xml2"))
install.packages(c("backports", "boot", "broom", "callr", "class", "dbplyr", "dplyr", "fs", "ggplot2", "glue", "KernSmooth", "lattice", "lifecycle", "lubridate", "MASS", "modelr", "nlme", "nnet", "pillar", "purrr", "Rcpp", "reshape2", "rlang", "spatial", "survival", "tibble", "tinytex", "vctrs", "withr", "xfun", "xml2"))
install.packages(c("backports", "boot", "broom", "callr", "class", "dbplyr", "dplyr", "fs", "ggplot2", "glue", "KernSmooth", "lattice", "lifecycle", "lubridate", "MASS", "modelr", "nlme", "nnet", "pillar", "purrr", "Rcpp", "reshape2", "rlang", "spatial", "survival", "tibble", "tinytex", "vctrs", "withr", "xfun", "xml2"))
install.packages(c("backports", "boot", "broom", "callr", "class", "dbplyr", "dplyr", "fs", "ggplot2", "glue", "KernSmooth", "lattice", "lifecycle", "lubridate", "MASS", "modelr", "nlme", "nnet", "pillar", "purrr", "Rcpp", "reshape2", "rlang", "spatial", "survival", "tibble", "tinytex", "vctrs", "withr", "xfun", "xml2"))
install.packages(c("backports", "boot", "broom", "callr", "class", "dbplyr", "dplyr", "fs", "ggplot2", "glue", "KernSmooth", "lattice", "lifecycle", "lubridate", "MASS", "modelr", "nlme", "nnet", "pillar", "purrr", "Rcpp", "reshape2", "rlang", "spatial", "survival", "tibble", "tinytex", "vctrs", "withr", "xfun", "xml2"))
install.packages(c("ggplot2movies", "ggpubr", "ggthemes", "plotly"))
install.packages(c("glmnet", "lmtest", "mvnormtest", "plotROC", "sandwich"))
library(knitr)
tinytex::install_tinytex()
blogdown::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown::serve_site()
blogdown:::new_post_addin()
blogdown:::insert_image_addin()
blogdown:::new_post_addin()
blogdown:::insert_image_addin()
blogdown::serve_site()
blogdown::serve_site()
blogdown:::insert_image_addin()
